#!/bin/bash

if [[ $# -eq 0 || $# -lt 5 ]]; then
 echo "Usage : $0 <logs directory> <single or loop run> <csv, simple or table format> <benchmark used: sysbench, hammerdb or ycsb> <config file>"
 exit 1
fi

readonly LOG_DIR=${1}
readonly RUN_TYPE=${2}
readonly OUTPUT_TYPE=${3}
readonly BENCHMARK_TOOL=${4}
readonly CONFIG_FILE=${5}

source ${CONFIG_FILE} > /dev/null 2>&1

function print_sysbench_results_per_single_run()
{
  local run_dir=${1}
  let total_transactions=0
  let total_tps=0
  let total_avg_latency=0
  let total_latency_95=0
  let number_of_logs_file=0
  while read line
  do
    transactions=$(echo "${line}" | awk -F'@' '{print $1}' | awk '{print $3}')
    tps=$(echo "${line}" | awk -F'@' '{print $1}' | awk '{print $4}' | tr -d '(')
    avg_latency=$(echo "${line}" | awk -F'@' '{print $2}' | awk '{print $3}' | tr -d ' ')
    latency_95=$(echo "${line}" | awk -F'@' '{print $3}' | awk '{print $4}' | tr -d ' ')
    total_transactions=$(echo "${total_transactions}" + "${transactions}"|bc)
    total_tps=$(echo "${total_tps}" + "${tps}"|bc)
    total_avg_latency=$(echo "${total_avg_latency}" + "${avg_latency}"|bc)
    total_latency_95=$(echo "${total_latency_95}" + "${latency_95}"|bc)
    (( number_of_logs_file++ ))
  done < <(grep 'transactions\|avg:\|percentile:' ${run_dir}/*.log|grep -v CLEANUP|paste -d "@" - - -)
  case "${OUTPUT_TYPE}" in
    csv)
      echo "${run_dir},$(echo "scale=2;${total_tps}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_avg_latency}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_latency_95}"/"${number_of_logs_file}"|bc)"
      ;;
    table)
      echo "${run_dir},$(echo "scale=2;${total_tps}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_avg_latency}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_latency_95}"/"${number_of_logs_file}"|bc)" | awk -F, '{printf "|%-10s|%-15s|%-17s|%17-s|\n", $1, $2, $3, $4}'
      ;;
    simple)
      echo "Run name: ${run_dir}"
      echo "Total transactions from ${number_of_logs_file} databases: ${total_transactions}"
      echo "Average TPS for all databases: $(echo "scale=2;${total_tps}"/"${number_of_logs_file}"|bc)"
      echo "Average latency for all databases: $(echo "scale=2;${total_avg_latency}"/"${number_of_logs_file}"|bc)"
      echo "Average 95% latency for all databases: $(echo "scale=2;${total_latency_95}"/"${number_of_logs_file}"|bc)"
      ;;
    *)
      echo "Unknown output type"
      exit 1
      ;;
    esac
}

function print_hammerdb_results_per_single_run()
{
  local run_dir=${1}
  let total_tpm=0
  let total_nopm=0
  let total_avg_latency=0
  let total_latency_95=0
  let number_of_logs_file=0
  while read line
  do
    tpm=$(echo "${line}" | awk '{print $7}')
    nopm=$(echo "${line}" | awk '{print $12}')
    total_tpm=$(echo "${total_tpm}" + "${tpm}"|bc)
    total_nopm=$(echo "${total_nopm}" + "${nopm}"|bc)
    (( number_of_logs_file++ ))
  done < <(grep 'System achieved' ${run_dir}/${BENCHMARK_TOOL}-*.log)
  case "${OUTPUT_TYPE}" in
    csv)
      echo "${run_dir},$(echo "scale=2;${total_tpm}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_nopm}"/"${number_of_logs_file}"|bc)"
      ;;
    table)
      echo "${run_dir},$(echo "scale=2;${total_tpm}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_nopm}"/"${number_of_logs_file}"|bc)" | awk -F, '{printf "|%-10s|%-15s|%-17s|\n", $1, $2, $3}'
      ;;
    simple)
      echo "Run name: ${run_dir}"
      echo "Average TPM for all databases: $(echo "scale=2;${total_tpm}"/"${number_of_logs_file}"|bc)"
      echo "Average NOPM for all databases: $(echo "scale=2;${total_nopm}"/"${number_of_logs_file}"|bc)"
      ;;
    *)
      echo "Unknown output type"
      exit 1
      ;;
    esac
}

function print_ycsb_results_per_single_run()
{
  local run_dir=${1}
  let total_ops=0
  let total_avg_read_latency=0
  let total_avg_write_latency=0
  let total_read_latency_95=0
  let total_write_latency_95=0
  let number_of_logs_file=0
  while read line
  do
    ops=$(echo "${line}" | awk -F'@' '{print $1}' | awk -F, '{print $3}')
    avg_read_latency=$(echo "${line}" | awk -F'@' '{print $2}' | awk -F, '{print $3}')
    avg_write_latency=$(echo "${line}" | awk -F'@' '{print $4}' | awk -F, '{print $3}')
    read_latency_95=$(echo "${line}" | awk -F'@' '{print $3}' | awk -F, '{print $3}')
    write_latency_95=$(echo "${line}" | awk -F'@' '{print $5}' | awk -F, '{print $3}')
    total_ops=$(echo "${total_ops}" + "${ops}"|bc)
    total_avg_read_latency=$(echo "${total_avg_read_latency}" + "${avg_read_latency}"|bc)
    total_avg_write_latency=$(echo "${total_avg_write_latency}" + "${avg_write_latency}"|bc)
    total_read_latency_95=$(echo "${total_read_latency_95}" + "${read_latency_95}"|bc)
    total_write_latency_95=$(echo "${total_write_latency_95}" + "${write_latency_95}"|bc)
    (( number_of_logs_file++ ))
  done < <(grep 'Throughput\|\[READ\], AverageLatency\|\[UPDATE\], AverageLatency\|\[READ\], 95thPercentileLatency(us)\|\[UPDATE\], 95thPercentileLatency(us)' ${run_dir}/*.log|paste -d "@" - - - - -)
  case "${OUTPUT_TYPE}" in
    csv)
      echo "${run_dir},$(echo "scale=2;${total_ops}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_avg_read_latency}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_avg_write_latency}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_read_latency_95}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_write_latency_95}"/"${number_of_logs_file}"|bc)"
      ;;
    table)
      echo "${run_dir},$(echo "scale=2;${total_ops}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_avg_read_latency}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_avg_write_latency}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_read_latency_95}"/"${number_of_logs_file}"|bc),$(echo "scale=2;${total_write_latency_95}"/"${number_of_logs_file}"|bc)"| awk -F, '{printf "|%-10s|%-15s|%-17s|%17-s|%-17s|%17-s|\n", $1, $2, $3, $4, $5, $6}'
      ;;
    simple)
      echo "Run name: ${run_dir}"
      echo "Average Operations Per Seconds for all databases: $(echo "scale=2;${total_ops}"/"${number_of_logs_file}"|bc)"
      echo "Average read latency for all databases: $(echo "scale=2;${total_avg_read_latency}"/"${number_of_logs_file}"|bc)"
      echo "Average write latency for all databases: $(echo "scale=2;${total_avg_write_latency}"/"${number_of_logs_file}"|bc)"
      echo "Average 95% read latency for all databases: $(echo "scale=2;${total_read_latency_95}"/"${number_of_logs_file}"|bc)"
      echo "Average 95% write latency for all databases: $(echo "scale=2;${total_write_latency_95}"/"${number_of_logs_file}"|bc)"
      ;;
    *)
      echo "Unknown output type"
      exit 1
      ;;
    esac
}

function print_perf_results()
{
  local run_dir=${1}
  if [ "$(uname -s)" == "Linux" ];then
    if [[ "${WORKERS_LIST_FILE}" == "${SDS_LIST_FILE}" ]]; then
      mapfile -t sds_node_array < <(cat ${run_dir}/$(basename ${WORKERS_LIST_FILE}))
    else
      mapfile -t worker_node_array < <(cat ${run_dir}/$(basename ${WORKERS_LIST_FILE}))
      mapfile -t sds_node_array < <(cat ${run_dir}/$(basename ${SDS_LIST_FILE}))
    fi
  else
    if [[ "${WORKERS_LIST_FILE}" == "${SDS_LIST_FILE}" ]]; then
      declare -a worker_node_array
      while IFS= read -r line; do sds_node_array+=("$line"); done < <(cat ${LOG_DIR}/${WORKERS_LIST_FILE})
    else
      declare -a worker_node_array
      while IFS= read -r line; do worker_node_array+=("$line"); done < <(cat ${LOG_DIR}/${WORKERS_LIST_FILE})
      declare -a sds_node_array
      while IFS= read -r line; do sds_node_array+=("$line"); done < <(cat ${LOG_DIR}/${SDS_LIST_FILE})
    fi
  fi
  
  if [[ "${WORKERS_LIST_FILE}" != "${SDS_LIST_FILE}" ]]; then
    echo "Worker nodes:"
    echo "-------------"
    for node_number in ${!worker_node_array[@]}
    do
      echo "worker node = ${worker_node_array[$node_number]}"
      local node_name=$(${KUBE_CMD} -n ${NAMESPACE_NAME} get node ${worker_node_array[$node_number]} -o jsonpath='{.metadata.labels.kubernetes\.io/hostname}')
      grep SUMMARY ${run_dir}/stats-worker-*-${node_name}*.log 
      #grep SUMMARY ${run_dir}/stats-worker-*-node${node_number}*.log | awk '{$1=""; print $0}' | cut -c 2-
    done
    if [[ "${STORAGE_TYPE}" == "internal" ]]; then
      echo ""
      echo "SDS nodes:"
      echo "----------"
      for node_number in ${!sds_node_array[@]}
      do
        local node_name=$(${KUBE_CMD} get -n ${NAMESPACE_NAME} node ${sds_node_array[$node_name]} -o jsonpath='{.metadata.labels.kubernetes\.io/hostname}')
        echo "${node_name}:"
        grep SUMMARY ${run_dir}/stats-sds-*-${node_number}*.log | awk '{$1=""; print $0}' | cut -c 2-
      done
    fi
  else
    echo "SDS + Worker nodes:"
    echo "-------------------"
    for node_number in ${!sds_node_array[@]}
    do
      local node_name=$(${KUBE_CMD} -n ${NAMESPACE_NAME} get node ${sds_node_array[$node_name]} -o jsonpath='{.metadata.labels.kubernetes\.io/hostname}')
      echo "${node_name}:"
      grep SUMMARY ${run_dir}/stats-sds-*-${node_number}*.log | awk '{$1=""; print $0}' | cut -c 2-
    done
  fi
}

function print_loop()
{
  pushd ${LOG_DIR}
  if [[ "${BENCHMARK_TOOL}" == "sysbench" ]]; then
    if [[ "${OUTPUT_TYPE}" == "table" ]]; then
      echo "Run number,Average TPS of,Average latency,Average 95% latency" | awk -F, '{printf "|%-10s|%-15s|%-17s|%17-s|\n", $1, $2, $3, $4}'
      echo " ,all databases,for all databases,for all databases" | awk -F, '{printf "|%-10s|%-15s|%-17s|%17-s|\n", $1, $2, $3, $4}'
      echo "----------------------------------------------------------------"
    fi
    for run_dir in $(ls -d run* | sort -n -k1.4,1.6)
    do
      print_sysbench_results_per_single_run ${run_dir}
    done
    for run_dir in $(ls -d run* | sort -n -k1.4,1.6)
    do
      echo -e "\nPrinting OS stats for run ${run_dir}:\n"
      print_perf_results ${run_dir}
    done
  fi
  if [[ "${BENCHMARK_TOOL}" == "hammerdb" ]]; then
    if [[ "${OUTPUT_TYPE}" == "table" ]]; then
      echo "Run number,Average TPM of,Average NOPM of,Average 95% latency" | awk -F, '{printf "|%-10s|%-15s|%-15s|\n", $1, $2, $3}'
      echo " ,all databases,for all databases,for all databases" | awk -F, '{printf "|%-10s|%-15s|%-15s|\n", $1, $2, $3}'
      echo "----------------------------------------------"
    fi
    for run_dir in $(ls -d run* | sort -n -k1.4,1.6)
    do
      print_hammerdb_results_per_single_run ${run_dir}
    done
    for run_dir in $(ls -d run* | sort -n -k1.4,1.6)
    do
      echo -e "\nPrinting OS stats for run ${run_dir}:\n"
      print_perf_results ${run_dir}
    done
  fi
  if [[ "${BENCHMARK_TOOL}" == "ycsb" ]]; then
    if [[ "${OUTPUT_TYPE}" == "table" ]]; then
      echo "Run number,Average OPM of,Average read latency of,Average write latency of,Average read 95% latency,Average write 95% latency" | awk -F, '{printf "|%-10s|%-15s|%-17s|%17-s|%-17s|%17-s|\n", $1, $2, $3, $4, $5, $6}'
      echo " ,all databases,for all databases,for all databases" | awk -F, '{printf "|%-10s|%-15s|%-17s|%17-s|%-17s|%17-s|\n", $1, $2, $3, $4, $5, $6}'
      echo "----------------------------------------------------------------------"
    fi
    for run_dir in $(ls -d run* | sort -n -k1.4,1.6)
    do
      print_ycsb_results_per_single_run ${run_dir}
    done
    for run_dir in $(ls -d run* | sort -n -k1.4,1.6)
    do
      echo -e "\nPrinting OS stats for run ${run_dir}:\n"
      print_perf_results ${run_dir}
    done
  fi

  popd
}

case "${RUN_TYPE}" in
  single)
    case "${BENCHMARK_TOOL}" in
      hammerdb)
        print_hammerdb_results_per_single_run ${LOG_DIR}
        echo ""
        [[ "${STATS}" == "true" ]] && print_perf_results ${LOG_DIR}
        ;;
      sysbench)
        print_sysbench_results_per_single_run ${LOG_DIR}
        echo ""
        [[ "${STATS}" == "true" ]] &&print_perf_results ${LOG_DIR}
        ;;
      ycsb)
        print_ycsb_results_per_single_run ${LOG_DIR}
        echo ""
        [[ "${STATS}" == "true" ]] &&print_perf_results ${LOG_DIR}
        ;;
    esac
    ;;
  loop)
    print_loop
    ;;
esac
